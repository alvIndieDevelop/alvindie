{"version":3,"sources":["pages/landingPage/LandingPage.js","App.js","serviceWorker.js","utils/customTheme.js","index.js"],"names":["LandingPage","state","mobileOpen","handleDrawerToggle","_this","setState","_this$props","this","props","classes","theme","Menu","react_default","a","createElement","className","menu","toolbar","menuContent","avatar","Typography","variant","Divider","menuSpacer","menuActions","IconButton","href","target","Avatar","src","react","CssBaseline","root","AppBar","position","appBar","Toolbar","onClick","menuButton","esm_Menu","drawer","Hidden","smUp","implementation","Drawer","container","anchor","direction","open","onClose","paper","drawerPaper","ModalProps","keepMounted","xsDown","content","Grid","justify","Paper","logo","logo2","title","align","aboutMe","Button","Component","withStyles","display","height","flex","backgroundColor","flexDirection","padding","spacing","unit","palette","background","backgroundSize","width","borderRadius","boxShadow","shadows","margin","common","white","Object","defineProperty","breakpoints","up","flexShrink","marginLeft","concat","marginRight","mixins","flexGrow","withTheme","App","react_router","exact","path","component","Boolean","window","location","hostname","match","customTheme","createMuiTheme","type","typography","fontFamily","h1","h2","h3","h4","h5","h6","ReactDOM","render","MuiThemeProvider","myTheme","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yXA2FMA,6MACJC,MAAQ,CACNC,YAAY,KAGdC,mBAAqB,WACnBC,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CAAEC,YAAaD,EAAMC,uFAEtC,IAAAI,EACoBC,KAAKC,MAAxBC,EADDH,EACCG,QAASC,EADVJ,EACUI,MAGXC,EACJC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACtBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQQ,UACxBL,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQS,aACtBN,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQU,SACxBP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,MAApB,2BACAT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACM,EAAA,EAAD,0CAEFR,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQc,aACxBX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQe,aACtBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,KAAK,4CACLC,OAAO,UAEPf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQC,IAAI,yEAKpB,OACEjB,EAAAC,EAAAC,cAACgB,EAAA,SAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MACAnB,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQuB,MACtBpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,SAAS,QAAQnB,UAAWN,EAAQ0B,QAC1CvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEY,QAAS9B,KAAKJ,mBACdY,UAAWN,EAAQ6B,YAEnB1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,OAEF3B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAGJT,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQ+B,QACtB5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACEC,UAAWtC,KAAKC,MAAMqC,UACtBxB,QAAQ,YACRyB,OAA4B,QAApBpC,EAAMqC,UAAsB,QAAU,OAC9CC,KAAMzC,KAAKN,MAAMC,WACjB+C,QAAS1C,KAAKJ,mBACdM,QAAS,CACPyC,MAAOzC,EAAQ0C,aAEjBC,WAAY,CACVC,aAAa,IAGd1C,IAGLC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQa,QAAM,EAACX,eAAe,OAC5B/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACEnC,QAAS,CACPyC,MAAOzC,EAAQ0C,aAEjB9B,QAAQ,YACR2B,MAAI,GAEHrC,KAIPC,EAAAC,EAAAC,cAAA,QAAMC,UAAWN,EAAQ8C,SACvB3C,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQQ,UACxBL,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAMX,WAAS,EAACY,QAAQ,UACtB7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO3C,UAAWN,EAAQyC,OACxBtC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQkD,MACtB/C,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQmD,SAE1BhD,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQoD,OACtBjD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKyC,MAAM,UAA/B,iBAIFlD,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQsD,SACtBnD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAY0C,MAAM,UAAlB,+DAEElD,EAAAC,EAAAC,cAAA,WAFF,oDAIEF,EAAAC,EAAAC,cAAA,WAJF,sDAMEF,EAAAC,EAAAC,cAAA,WANF,2DAQEF,EAAAC,EAAAC,cAAA,WARF,sBAUEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAZF,yDAaqDF,EAAAC,EAAAC,cAAA,WAbrD,aAgBAF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQ3C,QAAQ,aAAhB,sBA5GQ4C,aAuHXC,cA/LA,SAAAxD,GAAK,MAAK,CACvBsB,KAAM,CACJmC,QAAS,QAEXnD,KAAM,CACJoD,OAAQ,QACRC,KAAM,WACNC,gBAAiB,UACjBH,QAAS,OACTI,cAAe,UAEjBrD,YAAa,CACXsD,QAA8B,EAArB9D,EAAM+D,QAAQC,MAEzBnD,WAAY,CACV8C,KAAM,YAER7C,YAAa,CACX8C,gBAAiB5D,EAAMiE,QAAQC,WAAW1B,OAE5C/B,OAAQ,CACNyD,WAAU,8EACVC,eAAgB,cAChBT,OAAQ,IACRU,MAAO,IACPC,aAAc,MACdC,UAAWtE,EAAMuE,QAAQ,IAE3BtB,KAAM,CACJuB,OAAQxE,EAAM+D,QAAQC,MAExBd,MAAO,CACLsB,OAAQ,OACRN,WAAU,sEACVC,eAAgB,cAChBP,gBAAiB5D,EAAMiE,QAAQQ,OAAOC,MACtChB,OAAQ,IACRU,MAAO,IACPC,aAAc,MACdC,UAAWtE,EAAMuE,QAAQ,IAE3BzC,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GACJ3E,EAAM6E,YAAYC,GAAG,MAAQ,CAC5BV,MA5Cc,IA6CdW,WAAY,IAGhBtD,OAAOkD,OAAAC,EAAA,EAAAD,CAAA,CACLK,WAjDgB,KAkDfhF,EAAM6E,YAAYC,GAAG,MAAQ,CAC5BV,MAAK,eAAAa,OAnDS,IAmDT,SAGTrD,WAAW+C,OAAAC,EAAA,EAAAD,CAAA,CACTO,YAAa,IACZlF,EAAM6E,YAAYC,GAAG,MAAQ,CAC5BrB,QAAS,SAGblD,QAASP,EAAMmF,OAAO5E,QACtBkC,YAAa,CACX2B,MA9DgB,KAgElBvB,QAAS,CACPuC,SAAU,EACVtB,QAA8B,EAArB9D,EAAM+D,QAAQC,MAEzBxB,MAAO,CACLsB,QAA8B,EAArB9D,EAAM+D,QAAQC,QA2HO,CAAEqB,WAAW,GAAhC7B,CAAwClE,GCtMxCgG,EANH,kBACVpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWpG,MCInBqG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wFCYSC,EA5BKC,YAAe,CACjChC,QAAS,CACPiC,KAAM,QAERC,WAAY,CAEVC,WAAY,2BACZC,GAAI,CACFD,WAAY,mCAEdE,GAAI,CACFF,WAAY,mCAEdG,GAAI,CACFH,WAAY,mCAEdI,GAAI,CACFJ,WAAY,mCAEdK,GAAI,CACFL,WAAY,mCAEdM,GAAI,CACFN,WAAY,sCChBlBO,IAASC,OACP1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAkB7G,MAAO8G,GACvB5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAeC,SAAUC,aACvB/G,EAAAC,EAAAC,cAAC8G,EAAD,QAGJC,SAASC,eAAe,SFkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.93f1ed76.chunk.js","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  CssBaseline,\n  Typography,\n  IconButton,\n  Avatar,\n  AppBar,\n  Toolbar,\n  Drawer,\n  Hidden,\n  Grid,\n  Paper,\n  Button,\n  Divider\n} from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\n\nconst drawerWidth = 260;\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  menu: {\n    height: \"100vh\",\n    flex: \"0 0 auto\",\n    backgroundColor: \"#212121\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  menuContent: {\n    padding: theme.spacing.unit * 3\n  },\n  menuSpacer: {\n    flex: \"1 1 100%\"\n  },\n  menuActions: {\n    backgroundColor: theme.palette.background.paper\n  },\n  avatar: {\n    background: `rgba(0,0,0,0) url(\"images/PorfileAlvaroMartin.png\") no-repeat center center`,\n    backgroundSize: \"250px 250px\",\n    height: 200,\n    width: 200,\n    borderRadius: \"50%\",\n    boxShadow: theme.shadows[5]\n  },\n  logo: {\n    margin: theme.spacing.unit\n  },\n  logo2: {\n    margin: \"auto\",\n    background: `rgba(0,0,0,0) url(\"images/LogoAlvaro2.png\") no-repeat center center`,\n    backgroundSize: \"250px 150px\",\n    backgroundColor: theme.palette.common.white,\n    height: 200,\n    width: 200,\n    borderRadius: \"50%\",\n    boxShadow: theme.shadows[5]\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  },\n  paper: {\n    padding: theme.spacing.unit * 3\n  }\n});\n\nclass LandingPage extends Component {\n  state = {\n    mobileOpen: false\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n  render() {\n    const { classes, theme } = this.props;\n\n    // drawer\n    const Menu = (\n      <div className={classes.menu}>\n        <div className={classes.toolbar} />\n        <div className={classes.menuContent}>\n          <div className={classes.avatar} />\n          <br />\n          <Typography variant=\"h6\">Alvaro Martin Caballero</Typography>\n          <Divider />\n          <Typography>A web developer Blog & Portfolio</Typography>\n        </div>\n        <div className={classes.menuSpacer} />\n        <Divider />\n        <div className={classes.menuActions}>\n          <IconButton\n            href=\"https://www.facebook.com/alvindiedevelop/\"\n            target=\"_blank\"\n          >\n            <Avatar src=\"images/osIcons/1461630829_facebook-square-shadow-social-media.png\" />\n          </IconButton>\n        </div>\n      </div>\n    );\n    return (\n      <Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                onClick={this.handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h5\">Alvaro Martin Caballero</Typography>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer}>\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={this.props.container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={this.state.mobileOpen}\n                onClose={this.handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper\n                }}\n                ModalProps={{\n                  keepMounted: true // Better open performance on mobile.\n                }}\n              >\n                {Menu}\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper\n                }}\n                variant=\"permanent\"\n                open\n              >\n                {Menu}\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Grid container justify=\"center\">\n              <Paper className={classes.paper}>\n                <div className={classes.logo}>\n                  <div className={classes.logo2} />\n                </div>\n                <div className={classes.title}>\n                  <Typography variant=\"h6\" align=\"center\">\n                    Acerca de mi\n                  </Typography>\n                </div>\n                <div className={classes.aboutMe}>\n                  <Typography align=\"center\">\n                    Mi nombre es Alvaro Martin Caballero me dedico con pasión\n                    <br />\n                    al desarrollo de videojuegos y al desarrollo web,\n                    <br />\n                    aprendiendo nuevas tecnologías en el transcurso.\n                    <br />\n                    soy un joven emprendedor que me gusta aportar ideas para\n                    <br />\n                    resolver problemas.\n                    <br />\n                    <br />\n                    <br />\n                    Mis pasatiempo vez en cuando entrar algún GameJam o<br />\n                    Hackaton.\n                  </Typography>\n                  <Button variant=\"contained\">mi CV</Button>\n                </div>\n              </Paper>\n            </Grid>\n          </main>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(LandingPage);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// pages\nimport LandingPage from \"./pages/landingPage/LandingPage\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path={\"/\"} component={LandingPage} />\n  </Switch>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst customTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n  typography: {\n    // 'Ubuntu Condensed', sans-serif\n    fontFamily: \"'Ubuntu Mono', monospace\",\n    h1: {\n      fontFamily: \" 'Ubuntu Condensed', sans-serif\"\n    },\n    h2: {\n      fontFamily: \" 'Ubuntu Condensed', sans-serif\"\n    },\n    h3: {\n      fontFamily: \" 'Ubuntu Condensed', sans-serif\"\n    },\n    h4: {\n      fontFamily: \" 'Ubuntu Condensed', sans-serif\"\n    },\n    h5: {\n      fontFamily: \" 'Ubuntu Condensed', sans-serif\"\n    },\n    h6: {\n      fontFamily: \" 'Ubuntu Condensed', sans-serif\"\n    }\n  }\n});\n\nexport default customTheme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport myTheme from \"./utils/customTheme\";\n\nReactDOM.render(\n  <MuiThemeProvider theme={myTheme}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}